# -*- coding: utf-8 -*-
"""cifar10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-NmIrEiQ8AXQ_44ybDpRERxNkzHWOMmD
"""



import matplotlib.pyplot as plt
from keras.datasets import cifar10
import tensorflow as tf
import numpy as np
from keras import models
from keras import layers
from keras.models import Sequential
import matplotlib.pyplot as plt
import PIL

(X_train,y_train),(X_test,y_test)=cifar10.load_data()

plt.imshow(X_train[1])

y_train=y_train.reshape(-1,)
y_train[:5]

classes=["somethingelse","somethingelse","somethingelse","somethingelse","somethingelse","somethingelse","somethingelse","somethingelse","ship","truck"]

def plot_sample(X,y,index):
  plt.figure(figsize=(15,2))
  plt.imshow(X[index])
  plt.xlabel(classes[y[index]])

plot_sample(X_train,y_train,2)

X_train=X_train/255
X_test=X_test/255

cnn =models.Sequential([
                        
                        layers.Conv2D( filters=32 , kernel_size=(3,3) , activation='relu' , input_shape=(32,32,3) ),
                        layers.MaxPooling2D((2,2)),
                        layers.Conv2D( filters=64 , kernel_size=(3,3) , activation='relu'  ),
                        layers.MaxPooling2D((2,2)),
                        layers.Flatten(),
                        layers.Dense(64,activation='relu'),
                        layers.Dense(10,activation='softmax'),

])

cnn.compile( 
    optimizer='adam' , 
    loss='sparse_categorical_crossentropy' , 
    metrics=['accuracy']       
            )

cnn.fit(X_train,y_train, epochs=5)

cnn.evaluate(X_test,y_test)

y_test=y_test.reshape(-1,)

plot_sample(X_test,y_test,1)

from keras.preprocessing.image import load_img
from keras.preprocessing.image import img_to_array

img=load_img(imgpath, target_size=(32, 32))
result = cnn.predict_classes(img)
print(result[0])

cnn.save('model.h5')
